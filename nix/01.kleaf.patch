diff --git a/BUILD.bazel b/BUILD.bazel
index be9a376..a8b9ff2 100644
--- a/BUILD.bazel
+++ b/BUILD.bazel
@@ -18,11 +18,7 @@ package(default_visibility = ["//visibility:public"])
 genrule(
     name = "host-tools",
     outs = [
-        "host-tools/bash",
-        "host-tools/perl",
-        "host-tools/rsync",
         "host-tools/sh",
-        "host-tools/tar",
     ],
     cmd = "for i in $(OUTS); do ln -s $$(which $$(basename $$i)) $$i; done",
     tags = ["no-remote"],
diff --git a/kleaf/bazel.WORKSPACE b/kleaf/bazel.WORKSPACE
index 935befb..e57c65c 100644
--- a/kleaf/bazel.WORKSPACE
+++ b/kleaf/bazel.WORKSPACE
@@ -13,13 +13,21 @@
 # limitations under the License.
 
 toplevel_output_directories(paths = ["out"])
-
-local_repository(
+load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")
+http_archive(
     name = "bazel_skylib",
-    path = "external/bazel-skylib",
+    urls = [
+        "https://github.com/bazelbuild/bazel-skylib/releases/download/1.1.1/bazel-skylib-1.1.1.tar.gz",
+        "https://mirror.bazel.build/github.com/bazelbuild/bazel-skylib/releases/download/1.1.1/bazel-skylib-1.1.1.tar.gz",
+    ],
+    sha256 = "c6966ec828da198c5d9adbaa94c05e3a1c7f21bd012a0b29ba8ddbccb2c93b0d",
 )
 
-local_repository(
+http_archive(
     name = "io_bazel_stardoc",
-    path = "external/stardoc",
+    sha256 = "c9794dcc8026a30ff67cf7cf91ebe245ca294b20b071845d12c192afe243ad72",
+    urls = [
+        "https://mirror.bazel.build/github.com/bazelbuild/stardoc/releases/download/0.5.0/stardoc-0.5.0.tar.gz",
+        "https://github.com/bazelbuild/stardoc/releases/download/0.5.0/stardoc-0.5.0.tar.gz",
+    ],
 )
diff --git a/kleaf/kernel.bzl b/kleaf/kernel.bzl
index fd30d4d..063b63f 100644
--- a/kleaf/kernel.bzl
+++ b/kleaf/kernel.bzl
@@ -109,6 +109,7 @@ def kernel_build(
         module_outs = [],
         generate_vmlinux_btf = False,
         deps = (),
+        workspace_name = "linux",
         toolchain_version = _KERNEL_BUILD_DEFAULT_TOOLCHAIN_VERSION):
     """Defines a kernel build target with all dependent targets.
 
@@ -267,6 +268,7 @@ def kernel_build(
         srcs = [sources_target_name],
         config = config_target_name + "/.config",
         include_tar_gz = config_target_name + "/include.tar.gz",
+        workspace_name = workspace_name,
     )
 
     _modules_prepare(
@@ -432,9 +434,6 @@ def _get_tools(toolchain_version):
         Label(e)
         for e in (
             "//build:kernel-build-scripts",
-            "//prebuilts/build-tools:linux-x86",
-            "//prebuilts/kernel-build-tools:linux-x86",
-            "//prebuilts/clang/host/linux-x86/clang-%s:binaries" % toolchain_version,
         )
     ]
 
@@ -502,6 +501,7 @@ def _kernel_config_impl(ctx):
             "Makefile",
             "configs/",
             "scripts/",
+            "include/",
         ]])
     ]
 
@@ -509,6 +509,7 @@ def _kernel_config_impl(ctx):
     include_tar_gz = ctx.outputs.include_tar_gz
 
     lto_config_flag = ctx.attr.lto[BuildSettingInfo].value
+    workspace_name = ctx.attr.workspace_name
 
     lto_command = ""
     if lto_config_flag != "default":
@@ -553,11 +554,16 @@ def _kernel_config_impl(ctx):
         {lto_command}
         # Grab outputs
           mv ${{OUT_DIR}}/.config {config}
-          tar czf {include_tar_gz} -C ${{OUT_DIR}} include/
+          if [[ -d src ]]; then
+            tar czf {include_tar_gz} -C src include/
+          else
+            tar czf {include_tar_gz} -C external/{workspace_name} include/
+          fi
         """.format(
         config = config.path,
         include_tar_gz = include_tar_gz.path,
         lto_command = lto_command,
+        workspace_name = workspace_name,
     )
 
     _debug_print_scripts(ctx, command)
@@ -601,6 +607,7 @@ _kernel_config = rule(
             doc = "the packaged include/ files",
         ),
         "lto": attr.label(default = "//build/kleaf:lto"),
+        "workspace_name": attr.string(default = "linux"),
         "_debug_print_scripts": attr.label(default = "//build/kleaf:debug_print_scripts"),
     },
 )
diff --git a/kleaf/preserve_env.sh b/kleaf/preserve_env.sh
index 4eb3c82..5889bb7 100755
--- a/kleaf/preserve_env.sh
+++ b/kleaf/preserve_env.sh
@@ -1,4 +1,4 @@
-#!/bin/bash
+#!/usr/bin/env bash
 
 # Copyright (C) 2021 The Android Open Source Project
 #
@@ -21,7 +21,7 @@
 # Hence, drop the actual value of $PWD and keep the references to it dynamic.
 #
 
-sed=/bin/sed
+sed="$(readlink -f $(which sed))"
 
 ( export -p; export -f ) | \
   # Remove the reference to PWD itself
